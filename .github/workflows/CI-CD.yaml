# GitHub Actions workflow
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions

name: CI-CD

on:
  pull_request:
  push:
    branches: [main]

jobs:
  node_tests:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node:
          - 22

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run linter
        run: yarn lint

      - name: Run TypeScript tests
        run: yarn test:typescript

      - name: Run Node tests
        run: yarn coverage:node

      - name: Send code coverage results to Coveralls
        uses: coverallsapp/github-action@v1.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - node_tests
    steps:
      - name: Let Coveralls know that all tests have finished
        uses: coverallsapp/github-action@v1.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  deploy:
    name: Publish to NPM
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - node_tests

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: "yarn"
      - run: yarn install --immutable

      - run: npx semantic-release --branches main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
